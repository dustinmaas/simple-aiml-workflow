openapi: 3.0.3
info:
  title: Model Server API
  description: API for managing and retrieving PyTorch models
  version: 1.0.0
servers:
  - url: http://localhost:5001
    description: Local development
paths:
  /health:
    get:
      summary: Health check endpoint
      description: Returns the health status of the service
      operationId: healthCheck
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
  /models:
    get:
      summary: List available models
      description: Returns a list of all available models
      operationId: listModels
      responses:
        '200':
          description: List of models
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: model1
                    file:
                      type: string
                      example: model1.pt
                    path:
                      type: string
                      example: /app/models/model1.pt
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /models/{model_id}:
    get:
      summary: Get model file
      description: Retrieves a specific model file
      operationId: getModel
      parameters:
        - name: model_id
          in: path
          required: true
          schema:
            type: string
          description: ID of the model to retrieve
      responses:
        '200':
          description: Model file
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '404':
          description: Model not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    post:
      summary: Upload model
      description: Upload and store a model file
      operationId: uploadModel
      parameters:
        - name: model_id
          in: path
          required: true
          schema:
            type: string
          description: ID to assign to the uploaded model
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                model:
                  type: string
                  format: binary
                  description: PyTorch model file (.pt)
      responses:
        '200':
          description: Model uploaded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    delete:
      summary: Delete model
      description: Delete a specific model
      operationId: deleteModel
      parameters:
        - name: model_id
          in: path
          required: true
          schema:
            type: string
          description: ID of the model to delete
      responses:
        '200':
          description: Model deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Model not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
