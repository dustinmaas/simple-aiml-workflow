openapi: 3.0.3
info:
  title: Inference Server API
  description: API for making predictions with versioned ONNX models
  version: 0.1.0
servers:
  - url: http://localhost:5000
    description: Local development
paths:
  /health:
    get:
      summary: Health check endpoint
      description: Returns the health status of the service
      operationId: healthCheck
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: healthy
  /predict:
    post:
      summary: Make predictions
      description: Make predictions using versioned models
      operationId: predict
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - features
              properties:
                features:
                  type: array
                  items:
                    oneOf:
                      - type: number
                      - type: array
                        items:
                          type: number
                  description: Input features for model prediction (single instance or batch)
                  example: [[10.0, 100.0], [8.0, 80.0]]
                model_name:
                  type: string
                  description: Name of the model to use
                  example: linear_regression_model
                model_version:
                  type: string
                  description: Version of the model to use (defaults to 'latest')
                  example: 1.0.0
      responses:
        '200':
          description: Prediction results
          content:
            application/json:
              schema:
                type: object
                properties:
                  predictions:
                    type: array
                    items:
                      oneOf:
                        - type: number
                        - type: array
                          items:
                            type: number
                    description: Model prediction results
                    example: [[70.22], [72.95]]
                  model:
                    $ref: '#/components/schemas/ModelInfo'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /models:
    get:
      summary: List available models
      description: Returns a list of all available models from the model server
      operationId: listModels
      responses:
        '200':
          description: List of models
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    $ref: '#/components/schemas/ModelVersion'
                example:
                  linear_regression_model:
                    - filename: linear_regression_model_v1.0.0.onnx
                      path: /app/models/linear_regression_model_v1.0.0.onnx
                      version: 1.0.0
                    - filename: linear_regression_model_v1.0.1.onnx
                      path: /app/models/linear_regression_model_v1.0.1.onnx
                      version: 1.0.1
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /models/{model_name}/versions:
    get:
      summary: List model versions
      description: Returns a list of all available versions for a specific model
      operationId: listModelVersions
      parameters:
        - name: model_name
          in: path
          required: true
          schema:
            type: string
          description: Name of the model
      responses:
        '200':
          description: List of model versions
          content:
            application/json:
              schema:
                type: object
                properties:
                  model:
                    type: string
                    example: linear_regression_model
                  versions:
                    type: array
                    items:
                      $ref: '#/components/schemas/ModelVersion'
        '404':
          description: Model not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
          example: Model not found or error making prediction

    ModelVersion:
      type: object
      properties:
        filename:
          type: string
          example: linear_regression_model_v1.0.0.onnx
        path:
          type: string
          example: /app/models/linear_regression_model_v1.0.0.onnx
        version:
          type: string
          example: 1.0.0

    ModelInfo:
      type: object
      properties:
        name:
          type: string
          example: linear_regression_model
        version:
          type: string
          example: 1.0.0
        metadata:
          $ref: '#/components/schemas/Metadata'
    
    Metadata:
      type: object
      properties:
        training_date:
          type: string
          format: date-time
          example: 2025-03-09T06:37:00.258110
        description:
          type: string
          example: Linear regression model for PRB prediction based on CQI and throughput
        metrics:
          type: string
          example: '{"mse": 5336.25537109375}'
